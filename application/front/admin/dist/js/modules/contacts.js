angular.module("Peaks.Contacts",["Peaks.Contacts.Services","Peaks.Contacts.Directives","Peaks.Contacts.Repositories"]),angular.module("Peaks.Contacts.Services",[]),angular.module("Peaks.Contacts.Directives",[]),angular.module("Peaks.Contacts.Repositories",[]),angular.module("Peaks.Contacts").controller("ContactConfig",["$scope","$http",function($scope,$http){function getContactInfos(){$http.get("/admin_contact/get_contact_info").success(function(data){var i=0;angular.forEach(data,function(){data[i].weight=parseInt(data[i].weight),data[i].id=parseInt(data[i].id),i++}),$scope.contactItems=data})}menuControl("messages"),$scope.editMode=!1,init_page(),$scope.addContactInfo=function(){$scope.newContactInfo.weight=$scope.contactItems.length,$http({url:"/admin_contact/create_contact_info",method:"POST",data:$scope.newContactInfo,headers:{"Content-Type":"application/json"}}).success(function(data){$scope.contactItems.push({id:data.id,name:data.name,value:data.value,target:data.target,icon:data.icon,weight:data.weight})}).error(function(data){$scope.alert="Une erreure est survenue.",console.log(data)}),$scope.newContactInfo=""},$scope.switchEditMode=function(object){$scope.editMode=!0,$scope.editedItem=object},$scope.updateContactInfo=function(){$http({url:"/admin_contact/edit_contact_info",method:"POST",data:$scope.editedItem,headers:{"Content-Type":"application/json"}}).success(function(){var i=0;angular.forEach($scope.contactItems,function(item){item.id===$scope.editedItem.id&&($scope.contactItems[i]=$scope.editedItem),i++}),$scope.editMode=!1})},$scope.deleteContactInfo=function(){$http({url:"/admin_contact/delete_contact_info",method:"POST",data:$scope.editedItem,headers:{"Content-Type":"application/json"}}).success(function(data){if(0===data.error){getContactInfos(),$scope.editMode=!1,$scope.alert=data.message;var temp=[];angular.forEach($scope.editedItem,function(item){item.id!=$scope.editedItem.id&&temp.push(item)}),$scope.editedItem=temp}})},$scope.reorder=function(object,sens){function updateItem(object){$http({url:"/admin_contact/edit_contact_info",method:"POST",data:object,headers:{"Content-Type":"application/json"}})}function setMinus(){angular.forEach($scope.contactItems,function(item){item.weight===currentWeight+1&&($scope.contactItems[i].weight=currentWeight,modified=1),item.id===object.id&&($scope.contactItems[i].weight=currentWeight+1,modified=1),i++,1===modified&&updateItem(item)})}function setPlus(){angular.forEach($scope.contactItems,function(item){item.weight===currentWeight-1&&($scope.contactItems[i].weight=currentWeight,modified=1),item.id===object.id&&($scope.contactItems[i].weight=currentWeight-1,modified=1),i++,1===modified&&updateItem(item)})}var currentWeight=object.weight,i=0,modified=0;"plus"==sens?setMinus():setPlus()},$scope.save=function(){console.log($scope.items),$http({url:"/admin_contact/update_config",method:"POST",data:$scope.items,headers:{"Content-Type":"application/json"}}).success(function(data){console.log(data),$scope.alert="Modification enregistrées !",showFadeAlert()}).error(function(){$scope.alert="Une erreure est survenue.",showFadeAlert()})},getContactInfos()}]),angular.module("Peaks.Contacts").controller("ContactFormsEdit",["$scope","$http","$stateParams","FormsRespository",function($scope,$http,$stateParams,FormsRespository){$scope.section="contacts/forms",$scope.backurl="contacts/forms",menuControl("messages");var id=$stateParams.id;$scope.mode=id;var getThePage=function(){FormsRespository.Get(id).success(function(data){$scope.item=data.items[0],init_page()})};"new"==id?($scope.item={},init_page()):getThePage(),$scope.delete=function(){confirm("Supprimer cette catégories et tout ses éléments ?")&&FormsRespository.Delete(id).success(function(){window.location.hash=$scope.backurl})},$scope.save=function(returnToList){$scope.alert="Sauvegarde...",showAlert(),FormsRespository.Save($scope.item).success(function(data){console.log(data),returnToList&&0===data.errors.length?window.location.hash="/contacts/forms":"new"===id&&0===data.errors.length?window.location.hash="/contacts/forms/"+data.id:($scope.alert=data.message,$scope.errors=data.errors,showFadeAlert(),getThePage())}).error(function(){$scope.alert="Une erreure est survenue.",showFadeAlert()})}}]),angular.module("Peaks.Contacts").controller("ContactFormsList",["$scope","$http","$injector",function($scope,$http,$injector){var config={section:"contacts/forms",menu:"messages",getUrl:"/admin_forms/forms_list/",deleteUrl:"/admin_forms/form_delete/"};$scope.table=[{title:"Nom",param:"name"}],$scope.pageTitle="Formulaires de contact",$injector.invoke(ItemList,this,{$scope:$scope,$http:$http,config:config})}]),angular.module("Peaks.Contacts").controller("EditFormModalCtrl",["$scope","$modalInstance","FormFieldsRespository","item",function($scope,$modalInstance,formFieldsRespository,item){$scope.item=item,$scope.save=function(){formFieldsRespository.Save(item).success(function(data){data.error>0?$scope.errors=data.errors:$modalInstance.close({action:"edit",item:$scope.item})})},$scope.deleteField=function(){bootbox.confirm("Etes vous sur de vouloir supprimer ce champ ?",function(result){result&&formFieldsRespository.Delete(item.id).success(function(){$modalInstance.close({action:"delete",item:$scope.item})})})},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.fieldvalues={add:function(){try{$scope.item.field_values.push({field_value:"valeur",field_display_value:"texte affiché"})}catch(e){$scope.item.field_values=[{field_value:"valeur",field_display_value:"texte affiché"}]}},remove:function(index){$scope.item.field_values.splice(index,1)}}}]),angular.module("Peaks.Contacts").controller("MessagesList",["$scope","$http","ContactsRepository","_",function($scope,$http,contactsRepository,_){function getTheMessages(){contactsRepository.messagesList($scope.isSpam,function(data,total_items){$scope.items=data,$scope.total_items=total_items,init_page(),loadMessage&&$scope.getResume(loadMessage)})}menuControl("messages"),$scope.isSpam=0;var loadMessage="";console.log(loadMessage),$scope.getMore=function(){contactsRepository.messagesList($scope.isSpam,function(data){$scope.items=data,$(".item-list").minSize()},!0)},$scope.setGetPage=function(pageNo){$scope.currentPage=pageNo,$scope.offset=$scope.currentPage*$scope.itemPerPage-$scope.itemPerPage,getTheItems($scope.itemPerPage,$scope.offset)},$scope.getView=function(id){window.location.hash="#/contacts/messages/"+id,block()},$scope.search=function(){$scope.query.length>=2?(console.log($scope.query),contactsRepository.searchItem(0,$scope.query,function(data){$scope.total_items=data.total_items,$scope.items=data.items},!1)):getTheMessages()},$scope.getResume=function(id){$(".item-list").find(".active").removeClass("active"),$("#item-"+id).addClass("active"),contactsRepository.messageDetails(id,function(data){$scope.resume=_.findWhere($scope.items,{id:id}),$scope.resume.fields=data.content_items;var i=0;angular.forEach($scope.items,function(item){item.id==id&&($scope.items[i].read_on=!0),i++})})},$scope.validation=function(id){$scope.deleteId=id,$("#validation-popup").showModal()},$scope.deleteItem=function(id){$http.get("/admin_contact/delete_message/"+id).success(function(data){"0"==data.error&&($scope.items=_.filter($scope.items,function(item){return item.id!=id}),($scope.resume.id=id)&&($scope.resume=""))})},$scope.refresh=function(){getTheMessages()},getTheMessages()}]),angular.module("Peaks.Contacts.Directives").directive("formsFields",function(){return{controller:function($scope,$element,$attrs,$transclude,$http,$stateParams,$modal,FormFieldsRespository){function getFormFields(){FormFieldsRespository.GetAll(id).success(function(data){var i=0;data=data.items,angular.forEach(data,function(){data[i].weight=parseInt(data[i].weight),data[i].id=parseInt(data[i].id),i++}),$scope.formFields=data})}var id=$stateParams.id;getFormFields(),$scope.sortableOptions={connectWith:".form-preview",stop:function(){var i=0;angular.forEach($scope.formFields,function(item){console.log(item),console.log(i),i!=item.weight&&(item.weight=i,updateItem(item),FormFieldsRespository.Save(item)),i++})},axis:"y",placeholder:"beingDragged",tolerance:"pointer",selector:".item"},$scope.openModal=function(object){object.parent_id||(object.parent_id=id),object.weight||(object.weight=$scope.formFields.length);var modalInstance=$modal.open({templateUrl:"/admin/view_loader/"+templateDir+"/contacts/widgets/edit_modal",controller:"EditFormModalCtrl",size:"lg",resolve:{item:function(){return angular.copy(object)}}});modalInstance.result.then(function(){getFormFields()})}},templateUrl:"/admin/view_loader/"+templateDir+"/contacts/widgets/forms_fields"}}),angular.module("Peaks.Contacts.Directives").directive("lastMessages",["ContactsRepository",function(contactsRepository){return{scope:{},templateUrl:"/admin/view_loader/desktop/contacts/widgets/last_messages",link:function(scope){function getData(){contactsRepository.lastMessage(function(data){console.log(data),scope.items=data.items})}getData()}}}]),angular.module("Peaks.Contacts.Directives").directive("unreadMessagesNbr",["ContactsRepository","$interval",function(contactsRepository,$interval){return{scope:{},template:'<div><span class="number">{{messagesNbr}}</span><br /><small>Nouveau(x) message(s)</small></div>',replace:!0,link:function(scope){function getData(){contactsRepository.unreadMessagesNbr(function(data){scope.messagesNbr=data.count})}getData();var interval=$interval(function(){getData()},3e4);scope.$on("$destroy",function(){$interval.cancel(interval)})}}}]),angular.module("Peaks.Contacts.Repositories").factory("ContactsRepository",["$http","_",function($http){function storeData(){}var messagesListCache=new Array,messageDetailsCache=new Array;return{messagesList:function(isSpam,callback,getOld){var max_id,offset,url;messagesListCache.length>0&&!getOld&&(callback(messagesListCache),max_id=_.max(messagesListCache,function(item){return item.id}),max_id=max_id.id),getOld&&(offset=_.min(messagesListCache,function(item){return item.id}),offset=offset.id),url=max_id?"/admin_contact/messages_list/"+isSpam+"?max_id="+max_id:"/admin_contact/messages_list/"+isSpam+"/5/"+offset,$http.get(url).success(function(data){data.items.forEach(function(item){var sender=_.findWhere(item.fields[0],{field_name:"Email"});item.sender=sender?sender.field_value:"Inconnu",messagesListCache.push(item)}),callback(messagesListCache,data.total_items),storeData(messagesListCache)})},searchItem:function(isSpam,query,callback,getOld){var url,offset;getOld&&(offset=_.min($scope.items,function(item){return item.id}),offset=offset.id),url="/admin_contact/messages_list/"+isSpam+"?query="+query,$http.get(url).success(function(data){var i=0;data.items.forEach(function(item){var sender=_.findWhere(item.fields[0],{field_name:"Email"});item.sender=sender?sender.field_value:"Inconnu",data.items[i++]=item}),callback(data)})},messageDetails:function(id,callback){messageDetailsCache[id]?callback(messageDetailsCache[id]):$http.get("/admin_contact/message/"+id).success(function(data){callback(data),messageDetailsCache[id]=data})},unreadMessagesNbr:function(callback){$http.get("/admin_contact/unread_messages_nbr").success(function(data){data.count=parseInt(data.count),callback(data)})},lastMessage:function(callback){$http.get("/admin_contact/messages_list/0/2/0").success(function(data){var i=0;data.items.forEach(function(item){var sender=_.findWhere(item.fields[0],{field_name:"Email"});item.sender=sender?sender.field_value:"Inconnu",data.items[i++]=item}),callback(data)})}}}]),angular.module("Peaks.Contacts.Repositories").factory("FormFieldsRespository",["$http",function($http){return{GetAll:function(parentId){return $http.get("/admin_forms/fields_list/"+parentId)},Delete:function(id){return $http.get("/admin_forms/field_delete/"+id)},Save:function(data){return $http({url:"/admin_forms/field_edit",method:"POST",data:data,headers:{"Content-Type":"application/json"}})}}}]),angular.module("Peaks.Contacts.Repositories").factory("FormsRespository",["$http",function($http){return{Get:function(id){return $http.get("/admin_forms/form_details/"+id)},Delete:function(id){return $http.get("/admin_forms/form_delete/"+id)},Save:function(data){return $http({url:"/admin_forms/form_edit",method:"POST",data:data,headers:{"Content-Type":"application/json"}})}}}]);