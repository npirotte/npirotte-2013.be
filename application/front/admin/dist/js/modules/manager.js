angular.module("Peaks.Manager",["Peaks.Manager.Services","Peaks.Manager.Directives","Peaks.Manager.Repositories"]),angular.module("Peaks.Manager.Services",[]),angular.module("Peaks.Manager.Directives",[]),angular.module("Peaks.Manager.Repositories",[]),angular.module("Peaks.Manager").controller("GroupEditCtrl",["$scope","$stateParams","GroupsRepository",function($scope,$stateParams,groupsRepository){function getData(){console.log("ok"),groupsRepository.GetGroup(id,function(data){console.log(data),$scope.item=data,init_page()})}menuControl("manager");var id=$stateParams.groupId;$scope.mode=id,$scope.backUrl="manager/groups",$scope.save=function(returnToList){groupsRepository.SaveGroup($scope.item,function(data){returnToList&&0==data.error?window.location.hash=$scope.backUrl:"new"==id&&0==data.error?window.location.hash="/manager/groupes/"+data.id:($scope.alert=data.message[data.message.length-1],$scope.errors=data.message.length>1?data.message:0,showFadeAlert())})},$scope.delete=function(){groupsRepository.DeleteGroup(id,function(){window.location.hash=$scope.backUrl})},"new"!=id?getData():($scope.item={},init_page())}]),angular.module("Peaks.Manager").controller("UserEditCtrl",["$scope","$http","$stateParams","GroupsRepository",function($scope,$http,$stateParams,groupsRepository){menuControl("manager");var id=$stateParams.userId;$scope.mode=id,$scope.backUrl="manager/users",$scope.userGroups=[],groupsRepository.GetGroups(function(data){$scope.userGroups=data});var getTheUser=function(){"new"!=id&&$http.get("/admin_manager/user_details/"+id).success(function(data){$scope.item=data[0],console.log($scope.item),init_page()})};$scope.panes={profile:"active",contact_info:!1,config:!1},$scope.selectPane=function(namespace,pane){$scope.panes={profile:!1,contact_info:!1,config:!1},$scope[namespace][pane]="active"},$scope.uploader={w:240,h:300,item_id:id,folder:"assets/images/users/"+id+"/thumbs/",assetPath:"users~"+id+"~thumbs",crop:1,uniqueName:!0},$scope.save=function(returnToList){return $scope.item.pwd1&&$scope.item.pwd1!=$scope.item.pwd2?($scope.errors=new Array("Les mots de passe ne sont pas identiques"),!1):($scope.alert="Sauvegarde…",showAlert(),console.log($scope.item),void $http({url:"/admin_manager/update_user",method:"POST",data:$scope.item,headers:{"Content-Type":"application/json"}}).success(function(data){console.log(data),returnToList&&0==data.error?window.location.hash="/manager/users":"new"==id&&0==data.error?window.location.hash="/manager/users/"+data.user_id:($scope.alert=data.message[data.message.length-1],$scope.errors=data.message.length>1?data.message:0,showFadeAlert())}).error(function(data){$scope.alert="Une erreure est survenue.",showFadeAlert(),console.log(data)}))},$scope.delete=function(){$http.get("/admin_manager/users_list").success(function(data){data.length<=1?($scope.alert="Cet utilisateur est le dernier enregistré.",showFadeAlert()):$http.get("/admin_manager/delete_user/"+id).success(function(){window.location.hash="/manager/users"})})},"new"!=id?getTheUser():setTimeout("init_page()",10)}]),angular.module("Peaks.Manager").controller("GroupListCtrl",["$scope","$http","$injector",function($scope,$http,$injector){var config={section:"manager/groups",menu:"manager",getUrl:"/admin_manager/user_groups_list/",deleteUrl:"admin_manager/user_group_delete/",getCallBack:function(){var i=0;angular.forEach($scope.items,function(item){$scope.items[i].statut=1==item.active?"success":"warning",1==item.suspend&&($scope.items[i].statut="error"),i++})}};$scope.table=[{title:"Nom",param:"ugrp_name",strong:!0}],$scope.pageTitle="Groupes d'utilisateurs",$injector.invoke(ItemList,this,{$scope:$scope,$http:$http,config:config})}]),angular.module("Peaks.Manager").controller("UserListCtrl",["$scope","$http","$injector",function($scope,$http,$injector){var config={section:"manager/users",menu:"manager",getUrl:"/admin_manager/users_list/",deleteUrl:"admin_manager/delete_user/",getCallBack:function(){var i=0;angular.forEach($scope.items,function(item){$scope.items[i].statut=1==item.active?"success":"warning",1==item.suspend&&($scope.items[i].statut="error"),i++})}};$scope.table=[{title:"",param:"src",width:"60px"},{title:"Nom d'utilisateur",param:"username",strong:!0},{title:"Email",param:"email"}],$scope.pageTitle="Utilisateurs",$scope.thumbPath="users",$injector.invoke(ItemList,this,{$scope:$scope,$http:$http,config:config})}]),angular.module("Peaks.Manager.Directives").directive("activationMessage",function(){return{template:'<div class="alert alert-warning alert-dismissable"><button type="button" data-dismiss="alert" class="close" aria-hidden="true">&times;</button>Ce compte n\'est pas encore activé. <a href="javascript:void(0)" ng-click="activateUser()">Forcer l\'activation</a></div>',controller:function($scope,$element,$attrs,$transclude,$http){$scope.activateUser=function(){$scope.alert="Activation…",showAlert(),$http({url:"/admin_manager/activate_user/"+$scope.item.user_id,method:"GET",headers:{"Content-Type":"application/json"}}).success(function(data){console.log(data),$scope.alert=data.message,$scope.item.active=1,showFadeAlert()}).error(function(data){$scope.alert="Une erreure est survenue.",showFadeAlert(),console.log(data)})}}}}),angular.module("Peaks.Manager.Directives").directive("contactInfos",function(){return{controller:function($scope,$element,$attrs,$transclude,$http){function getContactInfos(){$http.get("/admin_contact/get_contact_info/"+id).success(function(data){var i=0;angular.forEach(data,function(){data[i].weight=parseInt(data[i].weight),data[i].id=parseInt(data[i].id),i++}),$scope.contactItems=data,console.log(data)})}function updateItem(object){$http({url:"/admin_contact/edit_contact_info",method:"POST",data:object,headers:{"Content-Type":"application/json"}})}var id=$scope.item.user_id;$scope.sortableOptions={stop:function(){var i=0;angular.forEach($scope.contactItems,function(item){i!=item.weight&&($scope.contactItems[i].weight=i,updateItem($scope.contactItems[i])),i++})},axis:"y",placeholder:"beingDragged",tolerance:"pointer"},$scope.addContactInfo=function(){$scope.newContactInfo.parent_id=id,$scope.newContactInfo.weight=$scope.contactItems.length,$http({url:"/admin_contact/create_contact_info",method:"POST",data:$scope.newContactInfo,headers:{"Content-Type":"application/json"}}).success(function(data){$scope.contactItems.push({id:data.id,name:data.name,value:data.value,target:data.target,icon:data.icon,weight:data.weight})}).error(function(data){$scope.alert="Une erreure est survenue.",console.log(data)}),$scope.newContactInfo=null,$scope.editModeOpen=!1},$scope.switchEditMode=function(object){$scope.editMode=!0,$scope.editedItem=object,$("#edit-from-anchor").scrollTo()},$scope.updateContactInfo=function(){$http({url:"/admin_contact/edit_contact_info",method:"POST",data:$scope.editedItem,headers:{"Content-Type":"application/json"}}).success(function(){var i=0;angular.forEach($scope.contactItems,function(item){item.id===$scope.editedItem.id&&($scope.contactItems[i]=$scope.editedItem),i++}),$scope.editMode=!1})},$scope.deleteContactInfo=function(){$http({url:"/admin_contact/delete_contact_info",method:"POST",data:$scope.editedItem,headers:{"Content-Type":"application/json"}}).success(function(data){if(0===data.error){$scope.editMode=!1,$scope.alert=data.message;var temp=[];angular.forEach($scope.contactItems,function(item){item.weight>$scope.editedItem.weight&&(item.weight=item.weight-1,updateItem(item)),console.log(item),item.id!=$scope.editedItem.id&&temp.push(item)}),$scope.contactItems=temp}})},$scope.reorder=function(object,sens){function setMinus(){angular.forEach($scope.contactItems,function(item){item.weight===currentWeight+1&&($scope.contactItems[i].weight=currentWeight,modified=1),item.id===object.id&&($scope.contactItems[i].weight=currentWeight+1,modified=1),i++,1===modified&&updateItem(item)})}function setPlus(){angular.forEach($scope.contactItems,function(item){item.weight===currentWeight-1&&($scope.contactItems[i].weight=currentWeight,modified=1),item.id===object.id&&($scope.contactItems[i].weight=currentWeight-1,modified=1),i++,1===modified&&updateItem(item)})}var currentWeight=object.weight,i=0,modified=0;"plus"==sens?setMinus():setPlus()},getContactInfos()},templateUrl:"/admin/view_loader/"+templateDir+"/manager/widgets/contact_infos"}}),angular.module("Peaks.Manager.Directives").directive("serveUsage",["$http",function($http){return{scope:{},template:'<div google-chart chart="chart" style="{{chart.cssStyle}}" on-ready="chartReady()"/>',link:function($scope){function serverUsagePie(appSize,assetsSize,cacheSize,total){function fixGoogleChartsBarsBootstrap(){$(".google-visualization-table-table img[width]").each(function(index,img){$(img).css("width",$(img).attr("width")).css("height",$(img).attr("height"))})}var chart1={};chart1.type="PieChart",chart1.displayed=!1,chart1.cssStyle="height:200px; width:100%;",chart1.data={cols:[{id:"disk",label:"Disque",type:"string"},{id:"database",label:"Base de donnée",type:"number"}],rows:[{c:[{v:"Application"},{v:appSize,f:appSize/1e6+" Mo"}]},{c:[{v:"Données"},{v:assetsSize,f:assetsSize/1e6+" Mo"}]},{c:[{v:"Cache"},{v:cacheSize,f:cacheSize/1e6+" Mo"}]},{c:[{v:"Libre"},{v:total-appSize-assetsSize-cacheSize,f:(total-appSize-assetsSize-cacheSize)/1e6+" Mo sur "+total/1e6+" Mo"}]}]},chart1.options={title:"Utilisation du serveur",isStacked:"true",fill:20,pieHole:.3,pieSliceText:"none",animation:{duration:1e3,easing:"out"},displayExactValues:!0,slices:{0:{color:"#7FFF00"},1:{color:"#9d261d"},2:{color:"#1a1a1a"},3:{color:"#eee"}}},chart1.formatters={},$scope.chart=chart1,$scope.chartReady=function(){fixGoogleChartsBarsBootstrap()}}$http.get("/admin_manager/server_charge").success(function(data){console.log(data),serverUsagePie(parseInt(data.appSize),parseInt(data.assetsSize),parseInt(data.cacheSize),parseInt(data.serverSize)),console.log(data)})}}}]),angular.module("Peaks.Manager.Directives").directive("managerUserInfos",["UsersRepository",function(usersRepository){return{scope:{userId:"=userid"},controller:function($scope){usersRepository.userInfos($scope.userId,function(data){$scope.user=data})},restrict:"E",template:'<a href="#/manager/users/{{userId}}" >{{user.first_name}} {{user.last_name}}</a>',replace:!0}}]),angular.module("Peaks.Manager.Repositories").factory("GroupsRepository",["$http",function($http){var userGroupsCache=[];return{GetGroups:function(callback){userGroupsCache.length>0&&callback(userGroupsCache),$http.get("/admin_manager/user_groups_list").success(function(data){console.log(data),userGroupsCache=data.items,callback(data.items)})},GetGroup:function(id,callback){$http.get("/admin_manager/user_group_details/"+id).success(function(data){data.ugrp_admin=1==data.ugrp_admin,callback(data)})},SaveGroup:function(data,callback){$http({url:"/admin_manager/user_group_edit",method:"POST",data:data,headers:{"Content-Type":"application/json"}}).success(function(data){console.log(data),callback(data)}).error(function(){alert="Une erreure est survenue."})},DeleteGroup:function(id,callback){$http.get("/admin_manager/user_group_delete/"+id).success(function(){callback()})}}}]),angular.module("Peaks.Manager.Repositories").factory("UsersRepository",["$http",function($http){var userInfosCache=new Array;return{userInfos:function(id,callback){userInfosCache["user_"+id]?callback(userInfosCache["user_"+id]):$http.get("/admin_manager/user_infos/"+id).success(function(data){userInfosCache["user_"+id]=data,callback(data)})}}}]);