{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"unde",
				"undefined"
			],
			[
				"con",
				"console"
			],
			[
				"tye",
				"typeof"
			],
			[
				"item",
				"item_available"
			],
			[
				"error",
				"errors"
			],
			[
				"ope",
				"openModal"
			],
			[
				"ero",
				"errors"
			],
			[
				"For",
				"FormsFieldsRespository"
			],
			[
				"Form",
				"FormsFieldsRespository"
			],
			[
				"result",
				"resultObj"
			],
			[
				"modal",
				"modalInstance"
			],
			[
				"font",
				"font-family"
			],
			[
				"margin",
				"margin-top"
			],
			[
				"border",
				"border-radius"
			],
			[
				"background",
				"background-color"
			],
			[
				"pos-",
				"pos-f	position: fixed;"
			],
			[
				"pos",
				"pos-a	position: absolute;"
			],
			[
				"up",
				"updata"
			],
			[
				"order",
				"order_max"
			],
			[
				"ol",
				"old_weight"
			],
			[
				"map",
				"map_elements_list"
			],
			[
				"node",
				"nodes"
			],
			[
				"this",
				"this_element"
			],
			[
				"resu",
				"result_array"
			],
			[
				"page",
				"page"
			],
			[
				"paret",
				"parent_id"
			],
			[
				"parent",
				"parent_id"
			],
			[
				"pages",
				"pages_list"
			],
			[
				"min",
				"min-height"
			],
			[
				"margi",
				"margin-left"
			],
			[
				"me",
				"menus"
			],
			[
				"file",
				"fileNameCopy"
			],
			[
				"uplo",
				"uploaderId"
			],
			[
				"head",
				"header_viewmodel"
			],
			[
				"header",
				"header_model"
			],
			[
				"body",
				"body_class"
			],
			[
				"$meta",
				"$meta_title"
			],
			[
				"field",
				"field_value"
			],
			[
				"preg",
				"preg_match_all"
			],
			[
				"resut",
				"result_array"
			],
			[
				"temp",
				"templates"
			],
			[
				"key",
				"keywords"
			],
			[
				"uri",
				"uri_string"
			],
			[
				"sele",
				"select2Tags"
			],
			[
				"new",
				"newValue"
			],
			[
				"tag",
				"tags_model"
			],
			[
				"global",
				"global_tags"
			],
			[
				"glo",
				"global_tags_links"
			],
			[
				"parnt",
				"parent_intentity"
			],
			[
				"par",
				"parent_id"
			],
			[
				"tage",
				"tag_type"
			],
			[
				"tas",
				"tag_ids"
			],
			[
				"pare",
				"parent_intentity"
			],
			[
				"get_meta",
				"get_meta_id"
			],
			[
				"data",
				"database"
			],
			[
				"meta",
				"meta_keywords"
			],
			[
				"ed",
				"edit"
			],
			[
				"uni",
				"uniqueId"
			],
			[
				"templ",
				"template_values"
			],
			[
				"json",
				"json_encode"
			],
			[
				"tempa",
				"template_values"
			],
			[
				"create",
				"created_on"
			],
			[
				"wh",
				"where"
			],
			[
				"templa",
				"template"
			],
			[
				"pages_tem",
				"pages_templates_values"
			],
			[
				"full",
				"full_name"
			],
			[
				"max",
				"max_length"
			],
			[
				"is_re",
				"is_required"
			],
			[
				"parn",
				"parent_id"
			],
			[
				"get",
				"getItem"
			],
			[
				"save",
				"saveIsBuzy"
			],
			[
				"tem",
				"templateField"
			],
			[
				"getTem",
				"getTemplateFields"
			],
			[
				"pages_templs",
				"pages_templates_fields"
			],
			[
				"cons",
				"constraint"
			],
			[
				"_po",
				"_POST"
			],
			[
				"sho",
				"showAlert"
			],
			[
				"show",
				"showFadeAlert"
			],
			[
				"el",
				"else"
			],
			[
				"getTe",
				"getTemplateFields"
			],
			[
				"tep",
				"templateFiles"
			],
			[
				"template",
				"templates"
			],
			[
				"op",
				"options"
			],
			[
				"fore",
				"foreign"
			],
			[
				"delete",
				"db_delete	CI - Active Record DB Delete"
			],
			[
				"templtes",
				"templates_fields_edit"
			],
			[
				"preg_mat",
				"preg_match_all"
			],
			[
				"pa",
				"pattern"
			],
			[
				"admin",
				"admin_pages"
			],
			[
				"menu",
				"menuControl"
			],
			[
				"ou",
				"output	<output>"
			],
			[
				"forei",
				"odbc_foreignkeys"
			],
			[
				"pri",
				"primary"
			],
			[
				"$htt",
				"$http	AngularJS"
			],
			[
				"files",
				"file_list"
			],
			[
				"preg_",
				"preg_replace"
			],
			[
				"lo",
				"logDetailsCache"
			],
			[
				"logD",
				"logDetailsCache"
			],
			[
				"log",
				"logListCache"
			],
			[
				"lis",
				"logListCache"
			],
			[
				"set_",
				"set_output"
			],
			[
				"out",
				"output_json	CI - output Json"
			],
			[
				"fun",
				"function"
			],
			[
				"is",
				"isRunning"
			],
			[
				"del",
				"delimiter"
			],
			[
				"prop",
				"prop_1"
			],
			[
				"pro",
				"prop_2"
			],
			[
				"condi",
				"condition_array"
			],
			[
				"cond",
				"condition_array"
			],
			[
				"ru",
				"running"
			],
			[
				"jon",
				"json_encode"
			],
			[
				"strn",
				"string"
			],
			[
				"condition",
				"conditions"
			],
			[
				"param",
				"params"
			],
			[
				"fnctio",
				"function_match_tree"
			],
			[
				"appl",
				"apply_template"
			],
			[
				"funct",
				"function_match_tree"
			],
			[
				"app",
				"apply_functions"
			],
			[
				"function",
				"function_match_tree"
			],
			[
				"functio",
				"function_match_tree"
			],
			[
				"prit",
				"print_r"
			],
			[
				"dire",
				"verbose_directive	AngularJS"
			],
			[
				"stop",
				"stopTime"
			],
			[
				"$in",
				"$interval	AngularJS"
			],
			[
				"contact",
				"contact_contacts"
			],
			[
				"des",
				"desc"
			],
			[
				"port",
				"portfolio"
			],
			[
				"user",
				"user_id"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "//angular\n\nfunction MessagesListCtrl($scope, $http, contactsRepository, $routeParams, _ ) {\n\n  menuControl('messages');\n\n  $scope.isSpam = $routeParams.filter == 'messages' ? 0 : 1;\n  var loadMessage = $routeParams.messageId;\n\n  console.log(loadMessage);\n\n  function getTheMessages(){\n\n    //contenu\n    contactsRepository.messagesList($scope.isSpam, function(data, total_items)\n    {\n      $scope.items = data;\n      $scope.total_items = total_items;\n      init_page();\n\n      if (loadMessage)\n      {\n        $scope.getResume(loadMessage);\n      }\n  \n    });\n  }\n\n  $scope.getMore = function()\n  {\n    contactsRepository.messagesList($scope.isSpam, function(data, total_items)\n    {\n      $scope.items = data;\n      $('.item-list').minSize();\n    }, true);\n  }\n    \n  $scope.setGetPage = function (pageNo) {\n    $scope.currentPage = pageNo;\n    $scope.offset = $scope.currentPage * $scope.itemPerPage - $scope.itemPerPage;\n    getTheItems($scope.itemPerPage, $scope.offset);\n  };\n\n  $scope.getView = function(id)\n  {\n    window.location.hash = '#/contacts/messages/'+id;\n    block();\n  }\n\n  $scope.search = function()\n  {\n    if($scope.query.length >= 2)\n    {\n      console.log($scope.query);\n      contactsRepository.searchItem(0, $scope.query, function(data)\n      {\n        $scope.total_items = data.total_items;\n        $scope.items = data.items;\n      }, false);\n    }\n    else\n    {\n      getTheMessages();\n    }\n  }\n\n  $scope.getResume = function(id)\n  {\n    //contenu\n    $('.item-list').find('.active').removeClass('active');\n    $('#item-'+id).addClass('active');\n\n    contactsRepository.messageDetails(id, function(data)\n    {\n        $scope.resume = _.findWhere($scope.items, {id : id});\n        $scope.resume.fields = data.content_items;\n\n        var i = 0;\n\n        angular.forEach($scope.items, function(item)\n        {\n          if (item.id == id) {\n            $scope.items[i].read_on = true;\n          }\n          i++;\n        });\n    });\n  }\n\n  $scope.validation = function (id) {\n    $scope.deleteId = id;\n    $('#validation-popup').showModal();\n  }\n\n  $scope.deleteItem = function (id) {\n    $http.get('/admin_contact/delete_message/'+id).success(\n      function(data)\n      {\n        if (data['error'] == '0') {\n            //deleteItemInArray(id);\n\n            $scope.items = _.filter($scope.items, function(item){ return item.id != id });\n\n            if ($scope.resume.id = id) { $scope.resume = '' };\n        }\n      }\n    );\n  }\n\n  $scope.refresh = function () {\n    getTheMessages();\n  }\n\n  getTheMessages();\n}\n\nViewMessage = function($scope, $http, $location, $routeParams){\n\n  var id = $routeParams.messageId;\n\n  getTheMessages = function(){\n    //contenu\n    $http.get('/admin_contact/message/'+id).success(function(data) {\n      $scope.item = data[0];\n      setTimeout(\"init_page()\",10);\n    });\n  }\n\n  $scope.validation = function (id, index) {\n    $scope.deleteId = id;\n    $scope.$index = index;\n    $('#validation-popup').fadeIn();\n  }\n\n  $scope.deleteMessage = function (id, index) {\n    $http.get('/admin_contact/delete/'+id).success(getTheMessages());\n  }\n\n  getTheMessages();\n}\n\nfunction ContactConfigCtrl($scope, $http) {\n  menuControl('messages');\n\n  $scope.editMode = false;\n\n  init_page();\n\n  function getContactInfos ()\n  {\n    $http.get('/admin_contact/get_contact_info').success(function(data)\n      {\n        var i = 0;\n        angular.forEach(data, function(element){\n          data[i].weight = parseInt(data[i].weight);\n          data[i].id = parseInt(data[i].id);\n          i++;\n        });\n        $scope.contactItems = data;\n      })\n  }\n\n  $scope.addContactInfo = function()\n  {\n    $scope.newContactInfo.weight = $scope.contactItems.length;\n    $http({\n            url: '/admin_contact/create_contact_info',\n            method: \"POST\",\n            data: $scope.newContactInfo,\n            headers: {'Content-Type': 'application/json'}\n        }).success(function (data, status, headers, config) {\n            $scope.contactItems.push({id:data.id, name: data.name, value:data.value, target:data.target, icon:data.icon, weight:data.weight});\n            }).error(function (data, status, headers, config) {\n                $scope.alert = 'Une erreure est survenue.';\n                console.log(data);\n            }); \n\n    $scope.newContactInfo = '';\n  }\n\n  $scope.switchEditMode = function(object)\n  {\n    $scope.editMode = true;\n    $scope.editedItem = object;\n  }\n\n  $scope.updateContactInfo = function(object)\n  {\n    $http(\n    {\n      url: '/admin_contact/edit_contact_info',\n      method: 'POST',\n      data: $scope.editedItem,\n      headers: {'Content-Type': 'application/json'}\n    }).success(function(data) {\n      var i = 0;\n      angular.forEach($scope.contactItems, function(item){\n        if (item.id === $scope.editedItem.id) {$scope.contactItems[i] = $scope.editedItem};\n        i++;\n      });\n      $scope.editMode = false;\n    })\n  }\n\n  $scope.deleteContactInfo = function()\n  {\n    $http({\n      url: '/admin_contact/delete_contact_info',\n      method: 'POST',\n      data: $scope.editedItem,\n      headers: {'Content-Type': 'application/json'}\n    }).success(function(data) {\n      if (data.error === 0) {\n          getContactInfos();\n          $scope.editMode = false;\n          $scope.alert = data.message;\n\n          var temp = [],\n          i = 0;\n\n          angular.forEach($scope.editedItem, function(item) {\n            if ( item.id != $scope.editedItem.id ) temp.push(item);\n\n          });\n          $scope.editedItem = temp;\n\n      };\n    })\n  }\n\n  $scope.reorder = function(object, sens)\n  {\n    var currentWeight = object.weight,\n        newWeight,\n        i=0,\n        modified = 0;\n\n\n    function updateItem(object)\n    {\n          $http(\n          {\n            url: '/admin_contact/edit_contact_info',\n            method: 'POST',\n            data: object,\n            headers: {'Content-Type': 'application/json'}\n          });\n    }\n\n    function setMinus()\n    {\n      angular.forEach($scope.contactItems, function(item){\n        if (item.weight === currentWeight+1) { $scope.contactItems[i].weight = currentWeight; modified = 1};\n        if (item.id === object.id) { $scope.contactItems[i].weight = currentWeight+1; modified = 1};\n        i++;\n        if (modified === 1) {updateItem(item)};\n      });\n    }\n\n    function setPlus()\n    {\n      angular.forEach($scope.contactItems, function(item){\n        if (item.weight === currentWeight-1) { $scope.contactItems[i].weight = currentWeight; modified = 1};\n        if (item.id === object.id) { $scope.contactItems[i].weight = currentWeight-1; modified = 1};\n        i++;\n        if (modified === 1) {updateItem(item)};\n      });\n    }\n\n    sens == 'plus' ? setMinus() : setPlus();\n\n  }\n\n  $scope.save = function () {\n\n    console.log($scope.items);\n\n    $http({\n            url: '/admin_contact/update_config',\n            method: \"POST\",\n            data: $scope.items,\n            headers: {'Content-Type': 'application/json'}\n        })\n      .success(function (data, status, headers, config) {\n          console.log(data);\n\n            $scope.alert = 'Modification enregistrées !';\n                  showFadeAlert();\n                \n            })\n      .error(function (data, status, headers, config) {\n                $scope.alert = 'Une erreure est survenue.';\n                showFadeAlert();\n            });\n    \n  }\n\n  getContactInfos();\n\n}\n\n\n// ************** edition des formulaires ******************************//\n\n\nfunction ContactFormsListCtrl($scope, $http, $injector)\n{\n  var config = {\n    section : \"contacts/forms\",\n    menu : 'messages',\n    getUrl : '/admin_forms/forms_list/',\n    deleteUrl : '/admin_forms/form_delete/',\n  }\n\n  $scope.table = [\n      {title : 'Nom', param : 'name'}\n    ];\n\n  $scope.pageTitle = 'Formulaires de contact';\n\n  $injector.invoke(ItemList, this, {$scope: $scope, $http: $http, config: config});\n\n}\n\nfunction ContactFormsEditCtrl($scope, $http, $routeParams, FormsRespository)\n{\n  $scope.section = \"contacts/forms/list\";\n  $scope.backurl = 'contacts/forms/list';\n  menuControl('messages');\n\n  var id = $routeParams.id;\n  $scope.mode =  id;\n\n  var getThePage = function(){\n\n    FormsRespository.Get(id)\n      .success(function(data)\n      {\n        $scope.item = data.items[0];\n        init_page();\n      });\n   };\n\n  if (id == 'new') \n  {\n    $scope.item = {};\n    init_page();\n  } \n  else \n  {\n    getThePage();\n  }\n\n  $scope.delete = function()\n  {\n    if (confirm('Supprimer cette catégories et tout ses éléments ?')) {\n      FormsRespository.Delete(id)\n        .success(function(data)\n        {\n          window.location.hash = $scope.backurl;\n        });\n    };\n  }\n\n    $scope.save = function(returnToList)\n    {\n      $scope.alert = \"Sauvegarde...\";\n      showAlert();\n\n      FormsRespository.Save($scope.item)\n        .success(function (data, status, headers, config) {\n\n          console.log(data);\n\n            if (returnToList && data.error === 0) {\n              window.location.hash = '/contacts/forms/list';\n            }\n            else if (id === 'new' && data.errors.length === 0)\n            {\n              window.location.hash = '/contacts/forms/edit/' + data.id;\n            }\n            else\n            {\n              $scope.alert = data.message;\n              $scope.errors = data.errors;\n              showFadeAlert();\n              getThePage();\n            }\n                  \n          })\n        .error(function (data, status, headers, config) {\n                  $scope.alert = 'Une erreure est survenue.';\n                  showFadeAlert();\n              });\n    }\n    \n}\n\n\n// plats\n\nadmin.directive('formsFields', function(){\n  // Runs during compile\n  return {\n    //require: 'ngModel',\n    //template: 'test upload',\n    // name: '',\n    // priority: 1,\n    // terminal: true,\n    // scope: {\n    //     w : '=w',\n    //     h : '=h',\n    // }, // {} = isolate, true = child, false/undefined = no change\n    controller: function($scope, $element, $attrs, $transclude, $http, $routeParams, $modal, FormsFieldsRespository) {\n        \n        // gestion des infos contact\n\n        var id = $routeParams.id;\n\n        function getFormFields ()\n        {\n         \n          FormsFieldsRespository.GetAll(id)\n            .success(function(data)\n            {\n              var i = 0;\n              data = data.items;\n              angular.forEach(data, function(element){\n                data[i].weight = parseInt(data[i].weight);\n                data[i].id = parseInt(data[i].id);\n                i++;\n              });\n              $scope.formFields = data;\n            });\n        }\n\n        getFormFields();\n\n        // drag-n-drop\n\n        /*var formFieldsSamples = [\n          {name : 'text_field', display_name : \"Champ texte\", field_type : 'text'}\n        ];\n\n        $scope.formFieldsSamples = formFieldsSamples.slice();\n*/\n        $scope.sortableOptions = {\n          connectWith: \".form-preview\",\n          stop: function(e, ui) { \n            var i = 0;\n            //$scope.formFieldsSamples = formFieldsSamples.slice();\n            angular.forEach($scope.formFields, function( item )\n            {\n              console.log(item);\n              console.log(i);\n                if (i != item.weight )\n                {\n                  item.weight = i;\n                  updateItem(item);\n                  FormsFieldsRespository.Save(item);\n                }\n                i++;\n            })\n          },\n          axis: 'y',\n          placeholder: \"beingDragged\",\n          tolerance: 'pointer',\n          selector: '.item'\n        };\n\n      \n\n        $scope.openModal = function(object)\n        {\n          if (!object.parent_id) { object.parent_id = id };\n           if (!object.weight) { object.weight = $scope.formFields.length };\n\n          var modalInstance = $modal.open({\n            templateUrl: '/admin/view_loader/'+templateDir+'/contacts/widgets/edit_modal',\n            controller: EditFormModalCtrl,\n            size: 'lg',\n            resolve: {\n              item: function () {\n                return angular.copy(object);\n              }\n            }\n          });\n\n          modalInstance.result.then(function(resultObj)\n          {\n            getFormFields();\n          });\n        }\n\n    },\n    // require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements\n    // restrict: 'A', // E = Element, A = Attribute, C = Class, M = Comment\n    // template: '',\n    templateUrl: '/admin/view_loader/'+templateDir+'/contacts/widgets/forms_fields',\n    // replace: true,\n    // transclude: true,\n    // compile: function(tElement, tAttrs, function transclude(function(scope, cloneLinkingFn){ return function linking(scope, elm, attrs){}})),\n    // link: function($scope, iElm, iAttrs, controller) {\n      \n    // }\n  };\n});\n\nfunction EditFormModalCtrl($scope, $modalInstance, FormsFieldsRespository, item)\n{\n  $scope.item = item;\n\n  $scope.save = function () {\n    FormsFieldsRespository.Save(item)\n      .success(function(data){\n        if (data.error > 0) {\n          $scope.errors = data.errors\n        }\n        else\n        {\n           $modalInstance.close({ action : 'edit', item : $scope.item });\n        }\n      }); \n  };\n\n  $scope.deleteField = function()\n  {\n    bootbox.confirm('Etes vous sur de vouloir supprimer ce champ ?', function(result)\n    {\n      if (result) {\n        FormsFieldsRespository.Delete(item.id)\n          .success(function()\n          {\n             $modalInstance.close({ action : 'delete', item : $scope.item});\n          });\n      };\n    });\n  }\n\n  $scope.cancel = function () {\n    $modalInstance.dismiss('cancel');\n  };\n\n  $scope.fieldvalues = {\n    add : function()\n    {\n\n      try \n      {\n        $scope.item.field_values.push({ field_value : 'valeur', field_display_value : 'texte affiché'});\n      }\n      catch(e)\n      {\n        $scope.item.field_values = [{ field_value : 'valeur', field_display_value : 'texte affiché'}];\n      }\n         \n    },\n    remove: function(index)\n    {\n      $scope.item.field_values.splice(index, 1);\n    }\n  }\n\n}",
			"file": "application/front/admin/js/angular.contact.js",
			"file_size": 14096,
			"file_write_time": 130623775612336915,
			"settings":
			{
				"buffer_size": 14082,
				"line_ending": "Unix"
			}
		},
		{
			"file": "application/controllers/admin_contact.php",
			"settings":
			{
				"buffer_size": 2706,
				"line_ending": "Unix"
			}
		},
		{
			"file": "application/controllers/admin_forms.php",
			"settings":
			{
				"buffer_size": 3918,
				"line_ending": "Windows"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 575,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows",
				"name": "Xdebug Context",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows",
				"name": "Xdebug Watch",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows",
				"name": "Xdebug Stack",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows",
				"name": "Xdebug Breakpoint",
				"read_only": true,
				"scratch": true
			}
		}
	],
	"build_system": "Packages/User/typescript.sublime-build",
	"command_palette":
	{
		"height": 35.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"brw",
				"Preferences: Browse Packages"
			],
			[
				"Snippet: ci",
				"Snippet: CI - $_POST"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Disable Package"
			],
			[
				"pa",
				"Package Control: Remove Package"
			],
			[
				"Snippet: q",
				"Snippet: QUnit HTML"
			],
			[
				"i",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 472.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/websites/npirotte-2013.be",
		"/D/websites/npirotte-2013.be/application",
		"/D/websites/npirotte-2013.be/application/controllers",
		"/D/websites/npirotte-2013.be/application/front",
		"/D/websites/npirotte-2013.be/application/front/admin",
		"/D/websites/npirotte-2013.be/application/front/admin/js",
		"/D/websites/npirotte-2013.be/application/front/admin/plugins",
		"/D/websites/npirotte-2013.be/application/front/admin/plugins/loadingbar",
		"/D/websites/npirotte-2013.be/application/front/admin/style",
		"/D/websites/npirotte-2013.be/application/front/compilers",
		"/D/websites/npirotte-2013.be/application/libraries",
		"/D/websites/npirotte-2013.be/application/models",
		"/D/websites/npirotte-2013.be/application/models/models",
		"/D/websites/npirotte-2013.be/application/models/models/contact",
		"/D/websites/npirotte-2013.be/application/models/models/pages",
		"/D/websites/npirotte-2013.be/application/views",
		"/D/websites/npirotte-2013.be/application/views/admin",
		"/D/websites/npirotte-2013.be/application/views/admin/pages",
		"/D/websites/npirotte-2013.be/application/views/admin/templates",
		"/D/websites/npirotte-2013.be/application/views/admin/views",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/assets",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/assets/images",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/assets/widgets",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/banners",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/banners/banner",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/banners/bannerzone",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/contacts",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/contacts/forms",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/contacts/messages",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/contacts/widgets",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/manager",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/manager/groups",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/manager/users",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/news",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/news/categories",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/news/news",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/pages",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/pages/pages",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/pages/templates",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/portfolio",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/portfolio/categories",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/portfolio/portfolio",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/shared",
		"/D/websites/npirotte-2013.be/system",
		"/D/websites/npirotte-2013.be/system/helpers"
	],
	"file_history":
	[
		"/D/websites/npirotte-2013.be/system/helpers/view_helper.php",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.contact.js",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.assetsdirective.js",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/contacts/widgets/edit_modal.php",
		"/D/websites/npirotte-2013.be/application/front/admin/style/form.less",
		"/D/websites/npirotte-2013.be/application/front/admin/style_compilator.less",
		"/D/websites/npirotte-2013.be/application/front/compilers/admin_foot_js.php",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.admin.js",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/contacts/widgets/forms_fields.php",
		"/D/websites/npirotte-2013.be/application/front/admin/plugins/loadingbar/loading-bar.less",
		"/D/websites/npirotte-2013.be/application/front/admin/style/select2.less",
		"/D/websites/npirotte-2013.be/system/libraries/Form_validation.php",
		"/D/websites/npirotte-2013.be/application/controllers/admin_forms.php",
		"/D/websites/npirotte-2013.be/application/models/db_model.php",
		"/D/websites/npirotte-2013.be/application/models/models/contact/forms_fields.php",
		"/D/websites/npirotte-2013.be/application/libraries/MY_Form_validation.php",
		"/D/websites/npirotte-2013.be/npirotte.sublime-project",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/contacts/forms/edit.php",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.contactRepositories.js",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.portfolio.js",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/banners/bannerzone/edit.php",
		"/D/websites/npirotte-2013.be/application/front/admin/style/styles.less",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/assets/images/image_upload.php",
		"/D/websites/npirotte-2013.be/application/front/admin/style/bootstrap/variables.less",
		"/D/websites/npirotte-2013.be/application/front/admin/style/bootstrap/scaffolding.less",
		"/D/websites/npirotte-2013.be/application/views/admin/templates/layout.php",
		"/D/websites/npirotte-2013.be/application/controllers/admin_manager.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/shared/edit_tools.php",
		"/D/websites/npirotte-2013.be/application/front/admin/style/bootstrap/navs.less",
		"/D/websites/npirotte-2013.be/application/front/admin/style/tabbable.less",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/pages/pages/list.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/contacts/messages/list.php",
		"/D/websites/npirotte-2013.be/application/front/admin/js/jquery.admin.js",
		"/D/websites/npirotte-2013.be/application/controllers/admin.php",
		"/D/websites/npirotte-2013.be/application/views/admin/pages/login.php",
		"/D/websites/npirotte-2013.be/application/front/admin/style/logon.less",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/news/news/edit.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/news/categories/edit.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/manager/users/edit.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/manager/groups/edit.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/banners/banner/edit.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/portfolio/portfolio/edit.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/portfolio/categories/edit.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/pages/templates/edit.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/pages/pages/edit.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/menus/menus/edit.php",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.ctrlModels.js",
		"/D/websites/npirotte-2013.be/application/front/admin/style/bootstrap/tables.less",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/shared/views/list.php",
		"/D/websites/npirotte-2013.be/system/helpers/html_helper.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/manager/users/list.php",
		"/D/websites/npirotte-2013.be/application/front/admin/style/typography.less",
		"/D/websites/npirotte-2013.be/application/front/admin/style/ui-tree.less",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.pages.js",
		"/D/websites/npirotte-2013.be/application/models/pages_model.php",
		"/D/websites/sextoysreunions.be/contact.php",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.pagesDirectives.js",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.assets_manager.js",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/shared/widgets/tree.php",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.pagesRepositories.js",
		"/D/websites/npirotte-2013.be/application/controllers/admin_pages.php",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.menus.js",
		"/C/Users/npirotte/Desktop/angular-ui-tree-master/demo/js/tree.js",
		"/C/Users/npirotte/Downloads/angular.min.js",
		"/C/Users/npirotte/Desktop/angular-ui-tree-master/demo/index.html",
		"/D/websites/npirotte-2013.be/application/front/framework/js/tree/angular-ui-tree.js",
		"/D/websites/npirotte-2013.be/application/front/framework/js/angular-1.2.3/angular.min.js",
		"/C/Users/npirotte/Desktop/angular-ui-tree-master/demo/bower_components/angular/angular.min.js",
		"/D/websites/npirotte-2013.be/application/front/framework/js/angular-1.2.3/angular.min.js.old",
		"/C/Users/npirotte/Desktop/angular-ui-tree-master/demo/tree.html",
		"/C/Users/npirotte/Desktop/angular-ui-tree-master/demo/dist/angular-ui-tree.js",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/menus",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.menu.js",
		"/C/Users/npirotte/Desktop/angular-ui-tree-master/demo/bower_components/angular/angular.js",
		"/C/Users/npirotte/Desktop/angular-ui-tree-master/source/angular-ui-tree.css",
		"/D/websites/npirotte-2013.be/application/controllers/session.php",
		"/D/websites/npirotte-2013.be/application/controllers/admin_assets.php",
		"/D/websites/npirotte-2013.be/application/controllers/file_upload.php",
		"/D/websites/npirotte-2013.be/application/controllers/assets.php",
		"/D/websites/npirotte-2013.be/application/views/shared/grid_generator.php",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.manager.js",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.content_edition.js",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/pages/widgets/grid_editor.php",
		"/D/websites/npirotte-2013.be/application/logs/log-2014-06-15.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/assets/widgets/assets_list.php",
		"/D/websites/npirotte-2013.be/application/logs/log-2014-06-13.php",
		"/D/websites/npirotte-2013.be/application/libraries/session.php",
		"/D/websites/npirotte-2013.be/application/helpers/portfolio/showcase_helper.php",
		"/D/websites/npirotte-2013.be/index.php",
		"/D/websites/npirotte-2013.be/application/libraries/MY_Parser.php",
		"/D/websites/npirotte-2013.be/application/helpers/news/news_helper.php",
		"/D/websites/npirotte-2013.be/application/models/news_model.php",
		"/D/websites/npirotte-2013.be/application/views/pages/home.php",
		"/D/websites/npirotte-2013.be/application/front/default/style/styles.less",
		"/D/websites/npirotte-2013.be/application/views/templates/layout.php",
		"/D/websites/npirotte-2013.be/application/models/tags_model.php",
		"/D/websites/npirotte-2013.be/application/viewModels/news/LastNewsWidgetViewModel.php",
		"/D/websites/npirotte-2013.be/application/views/templates/layout_en.php",
		"/D/websites/npirotte-2013.be/application/viewModels/global/HeaderViewModel.php",
		"/D/websites/npirotte-2013.be/application/views/templates/meta_head.php",
		"/D/websites/npirotte-2013.be/application/views/pages/test.php",
		"/D/websites/npirotte-2013.be/application/controllers/pages.php",
		"/D/websites/npirotte-2013.be/application/front/compilers/admin_logon_foot_js.php",
		"/D/websites/npirotte-2013.be/application/front/admin/js/select2.js",
		"/D/websites/npirotte-2013.be/application/controllers/admin_news.php",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.news.js",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.globalDirectives.js",
		"/D/websites/npirotte-2013.be/application/front/admin/style/assets_manager.less",
		"/C/Users/npirotte/Desktop/index.html",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.globalRepositories.js",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.dashboard.js",
		"/D/websites/npirotte-2013.be/application/logs/log-2014-06-09.php",
		"/D/websites/npirotte-2013.be/application/controllers/admin_global.php",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.globaRepositories.js",
		"/C/Users/npirotte/Downloads/Sniper.Elite.V2-SKIDROW[rbg]/skidrow.nfo",
		"/D/websites/npirotte-2013.be/application/models/global_model.php",
		"/D/websites/npirotte-2013.be/application/front/admin/style/bootstrap/forms.less",
		"/D/websites/npirotte-2013.be/application/front/cache/admin_combined.css",
		"/D/websites/npirotte-2013.be/application/logs/log-2014-06-07.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/wysiwyg/wysiwyg/edit.php",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.managerDirectives.js",
		"/D/websites/npirotte-2013.be/application/front/admin/js/angular.contactDirectives.js",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/pages/widgets/frid_editor;",
		"/D/websites/npirotte-2013.be/system/libraries/Parser.php",
		"/D/websites/npirotte-2013.be/application/helpers/admin/form_helper.php",
		"/D/websites/npirotte-2013.be/application/views/admin/views/desktop/dashboard/dashboard/view.php",
		"/D/websites/npirotte-2013.be/application/controllers/auth.php",
		"/D/websites/npirotte-2013.be/application/front/admin/js/jquery.admin_logon.js"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"/Volumes/Documents/jobs/Ben/12_1014_website_js",
			"/Users/nicolaspirotte/Desktop/perso_web/code"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"radio_list ",
			".select2-container .select2-choice",
			"updateItem",
			"editedItem",
			"form-field",
			"widget-im",
			"widget-up",
			"widget-u",
			"hr",
			"brand",
			"uplo",
			"upla",
			"mainHeader",
			"widget-imageupload",
			"widget-imageupload.full",
			"tab",
			"item-list",
			"#container",
			"fa",
			"well",
			"panel",
			"opacity",
			".angular-ui-tree-handle",
			"mainHeader",
			"hr",
			"radius",
			"<p>",
			"order_max",
			"t_id",
			"pages",
			"place",
			"uiTreeNodes",
			"init",
			"treeNodesCtrl",
			"ui.tree",
			"uiTreeNodes",
			"['',",
			"completeCallBack",
			"media_category",
			");\n",
			"loader",
			"template_values_list",
			"convertToAngularModel",
			"ngModel",
			"multi",
			"open",
			"url",
			"join",
			"select2-container-multi",
			"clone",
			"preve",
			"pre",
			".content",
			"icon-",
			"template_values_list",
			"item",
			"itemfieldValuefieldValue",
			"item",
			"templates_fields_edit",
			"pages",
			"unique",
			"pages",
			"logs",
			"pages",
			"parse_functions",
			"pages",
			"news",
			"pages",
			"prin",
			"news_update",
			"contactsRespository",
			"user_id",
			"controls",
			"control-label",
			"control-group",
			"><",
			"cate",
			"validation",
			"categories",
			"news",
			"error_string",
			"error_array",
			"error_string",
			"validation_errors",
			"vaidation_errors",
			"unique",
			"[",
			"rules",
			"identity_",
			"identity_available",
			"unique",
			"now",
			"nox",
			"news",
			"controls",
			"control-label",
			"control-group",
			"controls",
			"control-label",
			"control-group",
			"controls",
			"control-label",
			"control-group",
			"form-control",
			"control-label",
			"control-group",
			"controls",
			"control-label",
			"control-group",
			"circle",
			"control-group",
			"sx",
			"controls",
			"<label class=\"control-label\"",
			"/label>",
			"<label",
			"controls",
			"<label(az-AZ)</label>",
			"control-group",
			"icon-",
			"default",
			"icon-",
			"table",
			"success",
			"\"span",
			"span-",
			"border",
			"background-clip"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"item",
			"<p class=\"style1\">",
			"admin",
			"",
			"fa fa-",
			"contactsRepository",
			"col-xs-6",
			"control-label col-xs-2",
			"form-group",
			"col-sm-6",
			"control-label col-sm-2",
			"form-group",
			"control-group col-sm-2",
			"col-sm-6",
			"control-label col-sm-2",
			"form-group",
			"col-xs-6",
			"control-label col-xs-2",
			"form-group",
			"control-label col-xs-2",
			"form-control",
			"col-xs-6",
			"control-label col-xs-3",
			"form-group",
			"xs",
			"col-xs-6",
			"<label class=\"control-label col-sx-3\"",
			"/label></div>",
			"<div class=\"col-xs-2\"><label",
			"col-xs-6",
			"<div class=\"col)xs-2\"><label(az-AZ)</label>",
			"form-group",
			"fa fa-",
			"\"col-sm-",
			"col-sm-",
			"fa fa-",
			"fa fa",
			"fa fa-",
			"brand-info",
			"gray-dark",
			"brand-primary",
			"gray-light",
			"brand-primary",
			"gray-lighter",
			"",
			"/admin_carte",
			"newField",
			"formFields",
			"",
			"\"",
			"\"\"",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "application/front/admin/js/angular.contact.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14082,
						"regions":
						{
						},
						"selection":
						[
							[
								8948,
								8948
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5073.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "application/controllers/admin_contact.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2706,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 1751.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "application/controllers/admin_forms.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3918,
						"regions":
						{
						},
						"selection":
						[
							[
								1314,
								1314
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 796.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 575,
						"regions":
						{
						},
						"selection":
						[
							[
								575,
								575
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Xdebug Client/Xdebug.tmLanguage",
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Xdebug Client/Xdebug.tmLanguage",
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Xdebug Client/Xdebug.tmLanguage",
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Xdebug Client/Xdebug.tmLanguage",
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				2,
				1
			],
			[
				0,
				1,
				1,
				2
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			0.880124223602,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 225.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.xdebug":
	{
		"height": 100.0
	},
	"project": "npirotte.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"jquery.ad",
				"application/front/admin/js/jquery.admin.js"
			],
			[
				"home",
				"application/views/pages/home.php"
			],
			[
				"gene",
				"application/models/general_model.php"
			],
			[
				"0",
				"application/logs/log-2014-01-01.php"
			],
			[
				"re",
				"content/resources/resources.json"
			],
			[
				"layou",
				"application/views/admin/templates/layout.php"
			],
			[
				"styles",
				"content/admin_mobile/style/styles.less"
			],
			[
				"list",
				"administration/desktop/pages/list.php"
			],
			[
				"dash",
				"administration/desktop/dashboard/dashboard.php"
			],
			[
				"manager",
				"content/admin/js/angular.manager.js"
			],
			[
				"varia",
				"content/admin/style/bootstrap/variables.less"
			],
			[
				"wel",
				"content/admin/style/bootstrap/wells.less"
			],
			[
				"typo",
				"content/admin/style/typography.less"
			],
			[
				"met",
				"application/views/templates/meta_head.php"
			],
			[
				"customer",
				"content/default/js/jquery.customer.js"
			],
			[
				"hom",
				"application/views/pages/home.php"
			],
			[
				"",
				"/private/var/folders/HZ/HZWFg5izHaqz1M-rUaUnFU+++TI/-Tmp-/21095230-41e6-4569-9968-d24082aa4175/www/reglementation.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 552.0,
		"selected_items":
		[
			[
				"",
				"D:\\websites\\sextoysreunions.be\\nickye.sublime-project"
			],
			[
				"se",
				"D:\\websites\\sextoysreunions.be\\nickye.sublime-project"
			],
			[
				"n",
				"D:\\websites\\cucina-autentica.be\\npirotte.sublime-project"
			],
			[
				"sec",
				"/D/websites/sextoysreunions.be/nickye.sublime-project"
			],
			[
				"cu",
				"/D/websites/cucina-autentica.be/cucina-autentica.sublime-project"
			],
			[
				"cus",
				"/D/websites/cucina-autentica.be/cucina-autentica.sublime-project"
			],
			[
				"p",
				"/D/websites/npirotte-2013.be/npirotte.sublime-project"
			],
			[
				"c",
				"/D/websites/cucina-autentica.be/cucina-autentica.sublime-project"
			],
			[
				"cuc",
				"/D/websites/cucina-autentica.be/cucina-autentica.sublime-project"
			],
			[
				"des",
				"/D/websites/deshabitsetmoi.be/deshabitsetmoi.sublime-project"
			],
			[
				"s",
				"/Volumes/documents/localhost/sainte-marguerite.be/sainte-marguerite.sublime-project"
			],
			[
				"st",
				"/Volumes/documents/localhost/sainte-marguerite.be/sainte-marguerite.sublime-project"
			]
		],
		"width": 420.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"xdebug":
		{
			"hide_conflict": false,
			"restore_index":
			{
				"17":
				{
					"group": 0,
					"index": 0
				},
				"18":
				{
					"group": 0,
					"index": 3
				},
				"19":
				{
					"group": 0,
					"index": 4
				},
				"20":
				{
					"group": 0,
					"index": 5
				},
				"23":
				{
					"group": 1,
					"index": 0
				},
				"24":
				{
					"group": 1,
					"index": 1
				},
				"25":
				{
					"group": 2,
					"index": 0
				},
				"26":
				{
					"group": 2,
					"index": 1
				},
				"28":
				{
					"group": 0,
					"index": 6
				},
				"30":
				{
					"group": 0,
					"index": 1
				},
				"32":
				{
					"group": 0,
					"index": 2
				}
			},
			"restore_layout":
			{
				"cells":
				[
					[
						0,
						0,
						2,
						1
					],
					[
						0,
						1,
						1,
						2
					],
					[
						1,
						1,
						2,
						2
					]
				],
				"cols":
				[
					0.0,
					0.5,
					1.0
				],
				"rows":
				[
					0.0,
					0.911180124224,
					1.0
				]
			}
		}
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 447.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
